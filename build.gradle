buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'io.qameta.allure', name: 'allure-gradle', version: '2.5'
    }
}

plugins {
    id 'java'
    id 'net.ltgt.apt' version '0.10'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

apply plugin: 'io.qameta.allure'

group 'me.etki'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

ext {
    guiceVersion = '4.2.0'
    lombokVersion = '1.16.20'
    slf4jVersion = '1.7.25'
    logbackVersion = '1.2.3'
    jcommanderVersion = '1.72'
    h2Version = '1.4.196'
    vertXVersion = '3.5.1'
    restVertXVersion = '0.8.1'
    governatorVersion = '1.17.5'
    airlineVersion = '2.3.0'
    hibernateValidatorVersion = '6.0.8.Final'
    elApiVersion = '3.0.0'
    fastClassPathScannerVersion = '2.18.1'
    swaggerUiVersion = '3.13.0'
    hikariCPVersion = '2.7.8'
    hibernateVersion = '5.2.15.Final'
    liquibaseVersion = '3.5.5'
    liquibaseLoggerVersion = '2.0.0'
    jacksonVersion = '2.9.3'

    allureVersion = '2.6.0'
    junitVersion = '5.1.0'
    retrofitVersion = '2.4.0'
}

dependencies {
    compile group: 'com.google.inject', name: 'guice', version: guiceVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile group: 'com.beust', name: 'jcommander', version: jcommanderVersion
    compile group: 'com.h2database', name: 'h2', version: h2Version
    compile group: 'io.vertx', name: 'vertx-web', version: vertXVersion
    compile group: 'io.vertx', name: 'vertx-web-client', version: vertXVersion
    compile group: 'com.zandero', name: 'rest.vertx', version: restVertXVersion
    compile group: 'com.netflix.governator', name: 'governator', version: governatorVersion
    compile group: 'com.github.rvesse', name: 'airline', version: airlineVersion
    compile group: 'org.hibernate', name: 'hibernate-validator', version: hibernateValidatorVersion
    compile group: 'javax.el', name: 'javax.el-api', version: elApiVersion
    compile group: 'org.glassfish', name: 'javax.el', version: elApiVersion
    compile group: 'io.github.lukehutch', name: 'fast-classpath-scanner', version: fastClassPathScannerVersion
    compile group: 'org.webjars', name: 'swagger-ui', version: swaggerUiVersion
    compile group: 'com.zaxxer', name: 'HikariCP', version: hikariCPVersion
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
    compile group: 'org.liquibase', name: 'liquibase-core', version: liquibaseVersion
    compile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: liquibaseLoggerVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion

    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    apt group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    testCompile group: 'com.squareup.retrofit2', name: 'retrofit', version: retrofitVersion
    testCompile group: 'com.squareup.retrofit2', name: 'converter-jackson', version: retrofitVersion
}

sourceSets {
    integrationTest {
        java {
            srcDir 'src/integration-test/java'
        }
        resources
        compileClasspath += sourceSets.test.compileClasspath
        runtimeClasspath += sourceSets.test.runtimeClasspath
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'me.etki.tasks.revolving.EntryPoint'
        )
    }
}

shadowJar {
    classifier = 'shadow'
}

allure {
    version = allureVersion
    aspectjweaver = true
    autoconfigure = true

    resultsDir = file('allure/metadata')
    reportDir = file('allure/report')

    useJUnit5 {
        version = allureVersion
    }
}

task integrationTest(type: Test) {
    systemProperties System.properties as Map<String, ?>
    useJUnitPlatform()
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}
